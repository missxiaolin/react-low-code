const i=t=>Symbol.iterator in t,c=t=>"entries"in t,f=(t,e)=>{const r=t instanceof Map?t:new Map(t.entries()),n=e instanceof Map?e:new Map(e.entries());if(r.size!==n.size)return!1;for(const[o,s]of r)if(!Object.is(s,n.get(o)))return!1;return!0},a=(t,e)=>{const r=t[Symbol.iterator](),n=e[Symbol.iterator]();let o=r.next(),s=n.next();for(;!o.done&&!s.done;){if(!Object.is(o.value,s.value))return!1;o=r.next(),s=n.next()}return!!o.done&&!!s.done};function b(t,e){return Object.is(t,e)?!0:typeof t!="object"||t===null||typeof e!="object"||e===null?!1:!i(t)||!i(e)?f({entries:()=>Object.entries(t)},{entries:()=>Object.entries(e)}):c(t)&&c(e)?f(t,e):a(t,e)}const p=window.React;function u(t){const e=p.useRef(void 0);return r=>{const n=t(r);return b(e.current,n)?e.current:e.current=n}}export{u};
