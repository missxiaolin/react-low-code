import{u as g,j as e}from"./index-CISSGvlG.js";import{S as F}from"./SettingModal-DIaRTxTF.js";import{V as u}from"./VsEditor-BbPnUSbt.js";import{V as x}from"./VariableBind-BSOFLFce.js";import"./util-BKa5BsPH.js";import"./index-Be0loznV.js";import"./index-Cd8mrToj.js";const C="_title_139jc_1",S={title:C},b=window.React.useEffect,E=window.React.useRef,O=window.React.useState,V=window.ahooks.useDebounceFn,I=window.antd.Button,o=window.antd.Form,r=window.antd.Select,T=window.antd.Tooltip,v=window.icons.EditOutlined,R=window.icons.QuestionCircleOutlined;function k({value:n,onChange:l,showModal:p}){const{page:d}=g(s=>s);return e.jsxs(e.Fragment,{children:[e.jsx(r,{placeholder:"请选择接口",showSearch:!0,allowClear:!0,style:{width:"82%"},value:n,onChange:s=>l(s),children:Object.values(d.apis).map(s=>e.jsx(r.Option,{value:s.id,children:s.name},s.id))}),e.jsx(I,{type:"link",onClick:p,icon:e.jsx(v,{})})]})}const P=()=>{const n=g(),[l]=o.useForm(),[p,d]=O("json"),s=E();b(()=>{var a;l.resetFields();let t;n.selectedElement?t=((a=n.page.elementsMap[n.selectedElement.id])==null?void 0:a.config.api)||{}:t=n.page.config.api||{},d((t==null?void 0:t.sourceType)||"json");const i=JSON.stringify((t==null?void 0:t.source)||"",null,2);l.setFieldsValue({sourceType:"json",id:"",sourceField:"",...t,source:i})},[n.selectedElement]);const f=t=>{d(t)};function w(){var t;(t=s.current)==null||t.showModal(l.getFieldValue("id"))}const{run:y}=V(()=>{h(l.getFieldValue("id"))},{wait:800}),h=t=>{var m,j;const i=l.getFieldsValue();let a=[];try{a=JSON.parse(i.source)}catch(c){console.error(c),a=[]}if((m=n.selectedElement)!=null&&m.id){const c={id:(j=n.selectedElement)==null?void 0:j.id,type:"api",api:{...i,id:t,source:a}};n.editElement(c)}else{const c={type:"api",api:{...i,id:t,source:a}};n.savePageInfo(c)}t&&l.setFieldValue("id",t)};return e.jsxs(o,{form:l,labelCol:{span:8},wrapperCol:{span:15},labelAlign:"right",onValuesChange:y,autoComplete:"off",children:[e.jsxs("h2",{className:S.title,children:[e.jsx("span",{children:"数据源配置"}),e.jsx(T,{title:"支持mock数据、接口请求和变量绑定",children:e.jsx(R,{style:{marginLeft:5}})})]}),e.jsx(o.Item,{label:"数据来源",name:"sourceType",children:e.jsxs(r,{onChange:t=>f(t),children:[e.jsx(r.Option,{value:"json",children:"静态数据"}),e.jsx(r.Option,{value:"api",children:"接口请求"}),e.jsx(r.Option,{value:"variable",children:"动态变量"})]})}),e.jsx(o.Item,{noStyle:!0,shouldUpdate:!0,children:t=>{const i=t.getFieldValue("sourceType");if(i==="json")return e.jsx(o.Item,{name:"source",noStyle:!0,children:e.jsx(u,{height:"calc(100vh - 300px)",language:"json"})});if(i==="api")return e.jsxs(e.Fragment,{children:[e.jsx(o.Item,{label:"请求地址",name:"id",children:e.jsx(k,{showModal:w})}),e.jsx(o.Item,{label:"数据处理",name:"sourceField",tooltip:"示例：{ code:0 ,data:{ list: [], total: 10 } } ，字段对应是list，因为表格的数据源只能是数组格式。",children:e.jsx(x,{placeholder:"返回值字段映射,eg: data.list"})}),e.jsx(o.Item,{name:"source",hidden:!0,children:e.jsx(u,{height:"350px",language:"json"})})]});if(i==="variable")return e.jsxs(e.Fragment,{children:[e.jsx(o.Item,{label:"绑定变量",name:"name",children:e.jsx(x,{readOnly:!0,placeholder:"数据源所对应的接口字段"})}),e.jsx(o.Item,{name:"source",hidden:!0,children:e.jsx(u,{height:"350px",language:"json"})})]})}}),e.jsx(F,{update:h,ref:s})]})};export{P as default};
