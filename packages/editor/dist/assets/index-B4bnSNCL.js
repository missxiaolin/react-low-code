import{j as e,u as v,T as k}from"./index-BGwl3vz8.js";import{V as S}from"./VariableBind-CekbWhpk.js";import{V as F}from"./VsEditor-BZzS--Dt.js";import"./util-C4LxnPcG.js";import"./index-Bt5bANNj.js";const B=window.icons.MinusCircleOutlined,P=window.icons.PlusOutlined,a=window.antd.Form,l=window.antd.Radio,g=window.antd.Input,L=window.antd.Switch,T=window.antd.Space,$=function(){return e.jsxs(e.Fragment,{children:[e.jsx(a.Item,{label:"接口ID",name:"id",hidden:!0,children:e.jsx(g,{})}),e.jsx(a.Item,{label:"接口名称",name:"name",rules:[{required:!0}],children:e.jsx(g,{placeholder:"请输入接口中文名称，eg: 用户列表",maxLength:20,showCount:!0})}),e.jsx(a.Item,{label:"请求方式",name:"method",children:e.jsxs(l.Group,{buttonStyle:"solid",children:[e.jsx(l.Button,{value:"GET",children:"GET"}),e.jsx(l.Button,{value:"POST",children:"POST"}),e.jsx(l.Button,{value:"PUT",children:"PUT"}),e.jsx(l.Button,{value:"PATCH",children:"PATCH"}),e.jsx(l.Button,{value:"DELETE",children:"DELETE"})]})}),e.jsx(a.Item,{label:"接口地址",extra:"支持模板语法：${id}，前提是事件流中有该字段。",children:e.jsx(T,{direction:"vertical",style:{width:"100%"},children:e.jsx(a.Item,{label:"API地址",name:"stgApi",noStyle:!0,rules:[{required:!0}],children:e.jsx(g,{prefix:"api：",placeholder:"http://www.missxiaolin.com/api/user"})})})}),e.jsx(a.Item,{label:"数据格式",name:"contentType",children:e.jsxs(l.Group,{buttonStyle:"solid",children:[e.jsx(l.Button,{value:"application/json",children:"JSON"}),e.jsx(l.Button,{value:"multipart/form-data",children:"FormData"}),e.jsx(l.Button,{value:"application/x-www-form-urlencoded",children:"Form"})]})}),e.jsx(a.Item,{label:"发送参数",children:e.jsx(a.List,{name:"params",children:(n,{add:o,remove:p})=>e.jsx(e.Fragment,{children:n.map(({name:c},s)=>e.jsxs(T,{align:"baseline",style:{marginBottom:n.length===s+1?0:10,alignItems:"center"},children:[e.jsx(a.Item,{name:[c,"key"],noStyle:!0,children:e.jsx(g,{placeholder:"请输入参数名"})}),e.jsx(a.Item,{name:[c,"value"],noStyle:!0,children:e.jsx(S,{placeholder:"请输入参数值"})}),e.jsx(P,{onClick:()=>o({key:"",value:""})}),s>0&&e.jsx(B,{onClick:()=>{p(c)}})]},`header-${s}`))})})}),e.jsx(a.Item,{label:"参数替换",name:"replaceData",tooltip:e.jsxs(e.Fragment,{children:[e.jsx("p",{children:"1. 默认会把事件流参数和自定义参数合并；"}),e.jsx("p",{children:"2. 覆盖参数是事件流中上下文的参数覆盖自定义参数；"}),e.jsxs("p",{children:["3. 保留参数为只取自定义参数，参数支持模板语法：","${id}","。"]})]}),children:e.jsxs(l.Group,{buttonStyle:"solid",children:[e.jsx(l.Button,{value:"merge",children:"合并参数"}),e.jsx(l.Button,{value:"cover",children:"覆盖参数"}),e.jsx(l.Button,{value:"reserve",children:"保留参数"})]})}),e.jsx(a.Item,{label:"开启代理",name:"isCors",extra:"开启接口代理对解决跨域问题很有用",children:e.jsx(L,{})})]})},f=window.antd.Form,C=window.antd.Input,A=window.antd.InputNumber,M=window.icons.InfoCircleOutlined,D=function(){return e.jsxs(e.Fragment,{children:[e.jsxs("p",{style:{lineHeight:"35px",color:"#5c5c5c",marginLeft:"70px",marginBottom:"10px"},children:[e.jsx(M,{}),e.jsxs("span",{style:{marginLeft:5},children:["用来定义接口返回结构，推荐结构：","{ code: 0, data: {}, msg: '' }"]})]}),e.jsx(f.Item,{label:"业务码",extra:"接口返回业务状态码，默认是：code",name:["result","code"],children:e.jsx(C,{placeholder:"默认为：code",maxLength:15,showCount:!0})}),e.jsx(f.Item,{label:"成功值",extra:"接口返回成功时对应的状态码值，默认是：0",name:["result","codeValue"],children:e.jsx(A,{placeholder:"默认为：0"})}),e.jsx(f.Item,{label:"结果字段",extra:"接口返回结果字段，默认是：data",name:["result","data"],children:e.jsx(C,{placeholder:"默认为：data",maxLength:15,showCount:!0})}),e.jsx(f.Item,{label:"报错字段",extra:"接口返回报错字段，默认是：msg",name:["result","msg"],children:e.jsx(C,{placeholder:"默认为：msg",maxLength:15,showCount:!0})})]})},I=window.antd.Form,O=window.antd.Input,E=window.antd.Switch,N=function(){return e.jsxs(e.Fragment,{children:[e.jsx(I.Item,{label:"默认成功提示",name:["tips","success"],children:e.jsx(O,{placeholder:"默认不提示",maxLength:50,showCount:!0})}),e.jsx(I.Item,{label:"默认失败提示",name:["tips","fail"],children:e.jsx(O,{placeholder:"默认不提示",maxLength:50,showCount:!0})}),e.jsx(I.Item,{label:"接口成功提示",name:["tips","isSuccess"],valuePropName:"checked",extra:"开启接口成功提示后，会优先使用接口返回成功信息。",children:e.jsx(E,{})}),e.jsx(I.Item,{label:"接口报错提示",name:["tips","isError"],valuePropName:"checked",extra:"开启接口报错提示后，会优先使用接口返回错误信息。",children:e.jsx(E,{})})]})},G=window.React.forwardRef,U=window.React.useImperativeHandle,H=window.React.useState,R=window.antd.Form,J=window.antd.Modal,_=window.antd.Tabs,q=({update:n},o)=>{const{page:p,addApi:c,updateApi:s}=v(m=>m),{apis:b}=p.apis||{},[d]=R.useForm(),[y,j]=H(!1),t={method:"GET",url:"",sourceType:"json",params:[{key:"",value:""}],contentType:"application/json",replaceData:"merge",isCors:!0,result:{code:"code",data:"data",msg:"msg",codeValue:0},tips:{success:"请求成功",fail:"请求失败",isSuccess:!0,isError:!0}};U(o,()=>({showModal:m=>{const r=m?b[m]:{};m?d.setFieldsValue({...r}):d.setFieldsValue({...t,...r}),j(!0)}}));const i=[{key:"base-set",label:"接口设置",forceRender:!0,children:e.jsx($,{})},{key:"structure",label:"返回结构设置",forceRender:!0,children:e.jsx(D,{})},{key:"tips",label:"消息提示设置",forceRender:!0,children:e.jsx(N,{})}];async function h(){if(!await d.validateFields())return;const r=d.getFieldsValue();if(r.id)s(d.getFieldsValue());else{const V=k();c({...t,...d.getFieldsValue(),id:V})}n==null||n(r.id),w()}function w(){j(!1),d.resetFields()}return e.jsx(J,{width:"800px",okText:"确认",cancelText:"取消",title:"接口配置",open:y,onOk:h,onCancel:w,children:e.jsx(R,{form:d,labelCol:{span:4},wrapperCol:{span:19},style:{maxWidth:800},autoComplete:"off",children:e.jsx(_,{defaultActiveKey:"1",items:i})})})},Q=G(q),K="_title_139jc_1",W={title:K},z=window.React.useEffect,X=window.React.useRef,Y=window.React.useState,Z=window.ahooks.useDebounceFn,ee=window.antd.Button,u=window.antd.Form,x=window.antd.Select,te=window.antd.Tooltip,ne=window.icons.EditOutlined,se=window.icons.QuestionCircleOutlined;function le({value:n,onChange:o,showModal:p}){const{page:c}=v(s=>s);return e.jsxs(e.Fragment,{children:[e.jsx(x,{placeholder:"请选择接口",showSearch:!0,allowClear:!0,style:{width:"82%"},value:n,onChange:s=>o(s),children:Object.values(c.apis).map(s=>e.jsx(x.Option,{value:s.id,children:s.name},s.id))}),e.jsx(ee,{type:"link",onClick:p,icon:e.jsx(ne,{})})]})}const de=()=>{const n=v(),[o]=u.useForm(),[p,c]=Y("json"),s=X();z(()=>{var h;o.resetFields();let t;n.selectedElement?t=((h=n.page.elementsMap[n.selectedElement.id])==null?void 0:h.config.api)||{}:t=n.page.config.api||{},c((t==null?void 0:t.sourceType)||"json");const i=JSON.stringify((t==null?void 0:t.source)||"",null,2);o.setFieldsValue({sourceType:"json",id:"",sourceField:"",...t,source:i})},[n.selectedElement]);const b=t=>{c(t)};function d(){var t;(t=s.current)==null||t.showModal(o.getFieldValue("id"))}const{run:y}=Z(()=>{j(o.getFieldValue("id"))},{wait:800}),j=t=>{var w,m;const i=o.getFieldsValue();let h=[];try{h=JSON.parse(i.source)}catch(r){console.error(r),h=[]}if((w=n.selectedElement)!=null&&w.id){const r={id:(m=n.selectedElement)==null?void 0:m.id,type:"api",api:{...i,id:t,source:h}};n.editElement(r)}else{const r={type:"api",api:{...i,id:t,source:h}};n.savePageInfo(r)}t&&o.setFieldValue("id",t)};return e.jsxs(u,{form:o,labelCol:{span:8},wrapperCol:{span:15},labelAlign:"right",onValuesChange:y,autoComplete:"off",children:[e.jsxs("h2",{className:W.title,children:[e.jsx("span",{children:"数据源配置"}),e.jsx(te,{title:"支持mock数据、接口请求和变量绑定",children:e.jsx(se,{style:{marginLeft:5}})})]}),e.jsx(u.Item,{label:"数据来源",name:"sourceType",children:e.jsxs(x,{onChange:t=>b(t),children:[e.jsx(x.Option,{value:"json",children:"静态数据"}),e.jsx(x.Option,{value:"api",children:"接口请求"}),e.jsx(x.Option,{value:"variable",children:"动态变量"})]})}),e.jsx(u.Item,{noStyle:!0,shouldUpdate:!0,children:t=>{const i=t.getFieldValue("sourceType");if(i==="json")return e.jsx(u.Item,{name:"source",noStyle:!0,children:e.jsx(F,{height:"calc(100vh - 300px)",language:"json"})});if(i==="api")return e.jsxs(e.Fragment,{children:[e.jsx(u.Item,{label:"请求地址",name:"id",children:e.jsx(le,{showModal:d})}),e.jsx(u.Item,{label:"数据处理",name:"sourceField",tooltip:"示例：{ code:0 ,data:{ list: [], total: 10 } } ，字段对应是list，因为表格的数据源只能是数组格式。",children:e.jsx(S,{placeholder:"返回值字段映射,eg: data.list"})}),e.jsx(u.Item,{name:"source",hidden:!0,children:e.jsx(F,{height:"350px",language:"json"})})]});if(i==="variable")return e.jsxs(e.Fragment,{children:[e.jsx(u.Item,{label:"绑定变量",name:"name",children:e.jsx(S,{readOnly:!0,placeholder:"数据源所对应的接口字段"})}),e.jsx(u.Item,{name:"source",hidden:!0,children:e.jsx(F,{height:"350px",language:"json"})})]})}}),e.jsx(Q,{update:j,ref:s})]})};export{de as default};
